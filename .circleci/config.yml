version: 2.1
orbs:
  hello: circleci/hello-build@0.0.5
  slack: circleci/slack@4.12.5

parameters:  # Define global pipeline parameters
  email_to: 
    type: string
    default: "default@example.com"

jobs:
  show-repo-and-python-version:  # Job name
    parameters:  # Pass the pipeline parameter to the job
      email_to: 
        type: string
        default: "default@batman.com"
    docker:         # Execution environment
      - image: circleci/python:3.9  # Use a Python Docker image
    steps:          # Define the steps in the job
      - checkout                     # NOTE: Step to clone the repository
      - run:
          name: Print Hello World
          command: echo "I am trying!!"
      - run:
          name: Show repo folder
          command: |
            pwd
            ls -a
      - run:
          name: Check Python Version # Step to check Python version
          command: python --version  # Command to execute
      - run:
          name: Print Environment Variable
          command: |
            echo "Env email to from project settings: $EMAIL_TO"
            echo "Email passed as job parameter: << parameters.email_to >>"
  build:
    docker:         # Execution environment
      - image: circleci/python:3.9  # Use a Python Docker image
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: 
          name: create folder and file
          command: |
            mkdir -p /tmp/shared
            echo "this data is shared between jobs" >  /tmp/shared/data.csv
      - run:
          name: building step
          command: |
            echo "Building ..."
            cd application
            docker build . -t train-image
      - run:
          name: Test Docker Image
          command: |
            docker run train-image
      - persist_to_workspace:
          root: /tmp/shared
          paths:
            - data.csv
  deploy:      
    docker:         # Execution environment
      - image: circleci/python:3.9  # Use a Python Docker image
    parameters:
      env: # A parameter to control the environment
        type: string
        default: "dev" # Default to dev
    steps:
      - attach_workspace:
          at: .
      - run: 
          name: Access shared data
          command: |
            cat data.csv
      - run:
          name: deploying
          command: echo "deploying"
      - run:       # circleci do not print var contents on context.
          name: greeting
          command: echo $GREETING 
  notify:
      docker:
        - image: cimg/base:current
      steps:
        - slack/notify:
            custom: |
              {
                "blocks": [
                  {
                    "type": "section",
                    "fields": [
                      {
                        "type": "plain_text",
                        "text": "*This is a text notification*: Pipeline finished",
                        "emoji": true
                      }
                    ]
                  }
                ]
              }
            event: always

workflows:
  cicleci-howto:       # Workflow that runs the job
    jobs:
      - hello/hello-build
      - show-repo-and-python-version:
          name: Show repo and python version 1 (parameter)
          email_to: << pipeline.parameters.email_to >>  # Pass pipeline parameter to the job. If ommit => defailt = 
          requires:
            - hello/hello-build
      - show-repo-and-python-version:
          name: Show repo and python version 2 (default job)
          email_to:
          requires:
            - hello/hello-build
      - show-repo-and-python-version:
          name: Show repo and python version 3 (passing value)
          email_to: "default@agoravai.com.br"
          requires:
            - hello/hello-build
      - build:
          name: Build project
          requires: # NOTE: requires the name of the job
            - Show repo and python version 1 (parameter)
            - Show repo and python version 2 (default job)
            - Show repo and python version 3 (passing value)
      - deploy:
          name: Deploy project on Dev
          context: dev-context
          requires:
            - Build project
      - approval:
          type: approval
          name: Approve Deploy to QA
          requires:
            - Deploy project on Dev
      - deploy:
          name: Deploy project on Qa
          context: qa-context
          requires:
            - Approve Deploy to QA
      - notify:
          context: slack-secrets
